#!/bin/bash

# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2017-2018 Team LibreELEC (https://libreelec.tv)
# Copyright (C) 2018-present Team CoreELEC (https://coreelec.org)

. config/options "${1}"

pkg_lock "${PKG_NAME}" "packadd"
pkg_lock_status "ACTIVE" "${PKG_NAME}" "packadd"

# cleanup old install path
rm -rf "${ADDON_BUILD}"

# install addon parts
if pkg_call_exists addon; then
  pkg_call addon
else
  install_binary_addon "${PKG_ADDON_ID}"
fi

# Make sure we have a value for STRIP
setup_toolchain target

ADDON_DIRECTORY="${ADDON_BUILD}/${PKG_ADDON_ID}"

install_addon_files "${ADDON_DIRECTORY}"

debug_strip "${ADDON_DIRECTORY}"

# pack_addon()
ADDON_INSTALL_DIR="${TARGET_IMG}/${ADDONS}/${ADDON_VERSION}/${PROJECT}/${TARGET_ARCH}/${PKG_ADDON_ID}"
ADDONVER="$(xmlstarlet sel -t -v "/addon/@version" ${ADDON_BUILD}/${PKG_ADDON_ID}/addon.xml)"

rm -r ${ADDON_INSTALL_DIR}
cp -r ${ADDON_BUILD}/${PKG_ADDON_ID} ${ADDON_INSTALL_DIR}

# Jenkins add-on build
if [ "${ADDON_JENKINS}" = "yes" ]; then
  ADDON_JENKINS_DIR="${TARGET_IMG}/jenkins"
  ADDON_JENKINS_ADDON_NAME="${ADDON_VERSION}-${DEVICE:-${PROJECT}}-${TARGET_ARCH}-${PKG_ADDON_ID}-${ADDONVER}"
  mkdir -p "${ADDON_JENKINS_DIR}"
  cd ${ADDON_INSTALL_DIR}
  ${TOOLCHAIN}/bin/7za a -l -mx0 -bsp0 -bso0 -tzip ${ADDON_JENKINS_DIR}/${ADDON_JENKINS_ADDON_NAME}.zip ${PKG_ADDON_ID}-${ADDONVER}.zip resources/
  ( cd ${ADDON_JENKINS_DIR}
    sha256sum ${ADDON_JENKINS_ADDON_NAME}.zip > ${ADDON_JENKINS_ADDON_NAME}.zip.sha256
  )
  build_msg "CLR_INFO" "*** creating ${ADDON_JENKINS_ADDON_NAME}.zip for Jenkins complete ***"
else
  build_msg "CLR_INFO" "*** creating  ${PKG_ADDON_ID} complete ***"
fi

pkg_lock_status "UNLOCK" "${PKG_NAME}" "packadd" "packed"

